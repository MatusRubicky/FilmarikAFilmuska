package sk.upjs.ics.JPMR.GUI;

import sk.upjs.ics.JPMR.DAO.DaoFactory;
import sk.upjs.ics.JPMR.DAO.MessageDAO;
import sk.upjs.ics.JPMR.DAO.MovieManagerDAO;
import java.util.Scanner;
import sk.upjs.ics.JPMR.Message;

public class JDShowMessage extends javax.swing.JDialog {

    private static final int NEW_MESSAGE = 0;
    private static final int REPLY = 1;
    private static final int RECEIVED = 2;
    private static final int REQUEST = 3;

    private MovieManagerDAO spravcaFilmovDAO = DaoFactory.INSTANCE.getMovieDao();

    private Message message;
    private MessageDAO messageDAO;
    private int mod; //0-nova, 1-odpoved, 2-prjata
    private int iDmovie;

    /**
     * konstruktor pre obycajnu prijatu spravu
     *
     * @param parent
     * @param message
     * @param messageDAO
     * @param mod
     */
    public JDShowMessage(java.awt.Frame parent, Message message, MessageDAO messageDAO, int mod) {
        this(parent, true);
        this.message = message;
        this.messageDAO = messageDAO;

        this.mod = mod;
        this.checkMod(this.mod);
    }
    
    public JDShowMessage(java.awt.Frame parent, MessageDAO messageDAO, String receiver, int mod){
        this(parent, true);
        this.messageDAO = messageDAO;
        
        this.mod = mod;
        this.checkMod(this.mod);
        
        this.txtReceiverSender.setText(receiver);
    }

    /**
     * konstruktor pre ziadost o zmenu udajov o filme
     *
     * @param parent
     * @param message
     * @param messageDAO
     * @param mod
     * @param iDMovie
     */
    public JDShowMessage(java.awt.Frame parent, Message message, MessageDAO messageDAO, int mod, int iDMovie) {
        this(parent, true);
        this.message = message;
        this.messageDAO = messageDAO;
        this.iDmovie = iDMovie;
        this.mod = mod;
        this.checkMod(this.mod);
    }

    /**
     * konstruktor pre novu spravu
     *
     * @param parent
     * @param messageDAO
     * @param mod
     */
    public JDShowMessage(java.awt.Frame parent, MessageDAO messageDAO, int mod) {
        this(parent, true);
        this.messageDAO = messageDAO;

        this.mod = mod;
        this.checkMod(this.mod);
    }

    /**
     * Creates new form JDShowMessage
     *
     * @param parent
     * @param modal
     */
    public JDShowMessage(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btnAcceptChanges.setVisible(false);
        btnRefuseChanges.setVisible(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblObject = new javax.swing.JLabel();
        txtObject = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaMessageText = new javax.swing.JTextArea();
        btnStorno = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        lblReceiveSender = new javax.swing.JLabel();
        txtReceiverSender = new javax.swing.JTextField();
        lblWarning = new javax.swing.JLabel();
        btnAcceptChanges = new javax.swing.JButton();
        btnRefuseChanges = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblObject.setText("Predmet: ");

        txtaMessageText.setColumns(20);
        txtaMessageText.setRows(5);
        jScrollPane1.setViewportView(txtaMessageText);

        btnStorno.setText("Zahodiť");
        btnStorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStornoActionPerformed(evt);
            }
        });

        btnSend.setText("Odoslať");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        lblReceiveSender.setText("Odosielateľ: ");

        btnAcceptChanges.setText("Potvrď zmeny");
        btnAcceptChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptChangesActionPerformed(evt);
            }
        });

        btnRefuseChanges.setText("Zamietni zmeny");
        btnRefuseChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefuseChangesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblWarning)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAcceptChanges)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefuseChanges)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                        .addComponent(btnSend)
                        .addGap(9, 9, 9)
                        .addComponent(btnStorno))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblObject)
                            .addComponent(lblReceiveSender))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtReceiverSender)
                            .addComponent(txtObject))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReceiveSender)
                    .addComponent(txtReceiverSender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblObject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend)
                    .addComponent(btnStorno)
                    .addComponent(lblWarning)
                    .addComponent(btnAcceptChanges)
                    .addComponent(btnRefuseChanges))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStornoActionPerformed
        dispose();
    }//GEN-LAST:event_btnStornoActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if (this.mod == RECEIVED) {
            this.mod = REPLY;
            this.checkMod(mod);
        } else {
            if (checkObjectAndText()) {
                message = new Message();
                message.setObject(txtObject.getText());
                message.setText(txtaMessageText.getText());
                message.setMeno(messageDAO.getUserNameForMessage(messageDAO.getiDUser()));

                int idReceiver = messageDAO.getUserIdForMessage(txtReceiverSender.getText());

                if (idReceiver == -1) {
                    lblWarning.setText("Adresát neexistuje");
                    return;
                }

                messageDAO.sendMessage(message, messageDAO.getiDUser(), idReceiver);
                dispose();
            } else {
                lblWarning.setText("Adresát, predmet a text správy nesmú ostať prázdne");
            }
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnAcceptChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptChangesActionPerformed
        Object[] params = new Object[10];
        String[] helpArray = utilizeInput(message.getText());
        for (int i = 0; i < params.length-1; i++) {            
            params[i] = helpArray[i];
        }
        params[params.length - 1] = iDmovie;
        spravcaFilmovDAO.uploadMovieInfo(iDmovie, message.getiDSender(), params);
        Message m = new Message();
        m.setiDMovie(-1);
        m.setObject("Žiadosť bola akceptovaná");
        m.setText("Vaša žiadosť o zmenu údajov o filme bola akceptovaná");
        messageDAO.sendMessage(m, messageDAO.getiDUser(), message.getiDSender());
        dispose();
    }//GEN-LAST:event_btnAcceptChangesActionPerformed

    private void btnRefuseChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefuseChangesActionPerformed
        Message m = new Message();
        m.setObject("Žiadosť bola zamietnutá");
        m.setText("Vaša žiadosť o zmenu údajov o filme bola zamietnutá");
        m.setiDMovie(-1);
        messageDAO.sendMessage(m, messageDAO.getiDUser(), message.getiDSender());
        dispose();
    }//GEN-LAST:event_btnRefuseChangesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDShowMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDShowMessage dialog = new JDShowMessage(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptChanges;
    private javax.swing.JButton btnRefuseChanges;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnStorno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblObject;
    private javax.swing.JLabel lblReceiveSender;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JTextField txtObject;
    private javax.swing.JTextField txtReceiverSender;
    private javax.swing.JTextArea txtaMessageText;
    // End of variables declaration//GEN-END:variables

    private void checkMod(int mod) {
        switch (mod) {
            case NEW_MESSAGE:
                setModToNew();
                break;
            case REPLY:
                setModToReply();
                break;
            case RECEIVED:
                setModToReceived();
                break;
            case REQUEST:
                setModToRequest();
                break;
        }
    }

    private void setModToNew() {
        lblReceiveSender.setText("Komu: ");
        txtReceiverSender.setText("");
        txtReceiverSender.setEditable(true);

        txtObject.setText("");
        txtObject.setEditable(true);

        txtaMessageText.setText("");
        txtaMessageText.setEditable(true);

        btnSend.setText("Odoslať");
        btnStorno.setText("Zahodiť");

        btnSend.setVisible(true);
        btnStorno.setVisible(true);
        btnAcceptChanges.setVisible(false);
        btnRefuseChanges.setVisible(false);
    }

    private void setModToReply() {
        lblReceiveSender.setText("Komu: ");
        txtReceiverSender.setText(message.getMeno());
        txtReceiverSender.setEditable(false);

        txtObject.setText("");
        txtObject.setEditable(true);

        txtaMessageText.setText("");
        txtaMessageText.setEditable(true);

        btnSend.setText("Odoslať");
        btnStorno.setText("Zahodiť");

        btnSend.setVisible(true);
        btnStorno.setVisible(true);
        btnAcceptChanges.setVisible(false);
        btnRefuseChanges.setVisible(false);
    }

    private void setModToReceived() {
        lblReceiveSender.setText("Odosielateľ: ");
        txtReceiverSender.setText(message.getMeno());
        txtReceiverSender.setEditable(false);

        txtObject.setText(message.getObject());
        txtObject.setEditable(false);

        txtaMessageText.setText(message.getText());
        txtaMessageText.setEditable(false);

        btnSend.setText("Odpovedať");
        btnStorno.setText("Zrušiť");

        btnSend.setVisible(true);
        btnStorno.setVisible(true);
        btnAcceptChanges.setVisible(false);
        btnRefuseChanges.setVisible(false);
    }

    private boolean checkObjectAndText() {
        return (!(txtReceiverSender.getText() == null || txtReceiverSender.getText().equals("") || txtObject.getText() == null || txtObject.getText().equals("") || txtaMessageText.getText() == null || txtaMessageText.getText().equals("")));
    }

    private void setModToRequest() {
        lblReceiveSender.setText("Odosielateľ: ");
        txtReceiverSender.setText(message.getMeno());
        txtReceiverSender.setEditable(false);

        txtObject.setText("Žiadoť o zmenu údajov o filme");
        txtObject.setEditable(false);

        txtaMessageText.setText(message.getText());
        txtaMessageText.setEditable(false);

        btnSend.setVisible(false);
        btnStorno.setVisible(false);

        btnAcceptChanges.setVisible(true);
        btnRefuseChanges.setVisible(true);
    }

    /*private Object[] utilizeInput(String text) {
        Object[] params = new Object[10]; // 10, lebo všetky parametre filmu + iduser
        Scanner sc = new Scanner(text);

        String row;
        for (int i = 0; i < params.length - 1; i++) { //-1 lebo na koniec ešte ide index usera
            row = sc.nextLine();
            params[i] = row.substring(row.indexOf(':') + 2, row.length());
        }
        return params;
    }*/
    
    private String[] utilizeInput(String text) {
        String[] params = new String[10]; // 10, lebo všetky parametre filmu + iduser
        Scanner sc = new Scanner(text);

        String row;
        for (int i = 0; i < params.length - 1; i++) { //-1 lebo na koniec ešte ide index usera
            row = sc.nextLine();
            params[i] = row.substring(row.indexOf(':') + 2, row.length());
        }
        return params;
    }
}
